// <auto-generated />
using System;
using FinalWorkDataLibrary.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalWorkDataLibrary.Migrations
{
    [DbContext(typeof(OlympiadDbContext))]
    [Migration("20250930154748_AddedMoreData")]
    partial class AddedMoreData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Athlete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("SportId");

                    b.ToTable("Athletes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1986, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Usain",
                            PhotoPath = "test",
                            SportId = 1,
                            Surname = "Bolt"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1985, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Michael",
                            PhotoPath = "test",
                            SportId = 2,
                            Surname = "Phelps"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            DateOfBirth = new DateTime(1963, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Serhii",
                            PhotoPath = "test",
                            SportId = 1,
                            Surname = "Bubka"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            DateOfBirth = new DateTime(1997, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Simone",
                            PhotoPath = "test",
                            SportId = 4,
                            Surname = "Biles"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 4,
                            DateOfBirth = new DateTime(1987, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oleksandr",
                            PhotoPath = "test",
                            SportId = 5,
                            Surname = "Usyk"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            DateOfBirth = new DateTime(1997, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Katie",
                            PhotoPath = "test",
                            SportId = 2,
                            Surname = "Ledecky"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1976, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chris",
                            PhotoPath = "test",
                            SportId = 3,
                            Surname = "Hoy"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 4,
                            DateOfBirth = new DateTime(1982, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yana",
                            PhotoPath = "test",
                            SportId = 2,
                            Surname = "Klochkova"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1967, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alexander",
                            PhotoPath = "test",
                            SportId = 6,
                            Surname = "Karelin"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1962, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Steve",
                            PhotoPath = "test",
                            SportId = 7,
                            Surname = "Redgrave"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 4,
                            DateOfBirth = new DateTime(1976, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Andriy",
                            PhotoPath = "test",
                            SportId = 1,
                            Surname = "Shevchenko"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 1,
                            DateOfBirth = new DateTime(1982, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Natalie",
                            PhotoPath = "test",
                            SportId = 2,
                            Surname = "Coughlin"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1981, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jan",
                            PhotoPath = "test",
                            SportId = 1,
                            Surname = "Frodeno"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 3,
                            DateOfBirth = new DateTime(1989, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kohei",
                            PhotoPath = "test",
                            SportId = 4,
                            Surname = "Uchimura"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 1,
                            DateOfBirth = new DateTime(1971, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rulon",
                            PhotoPath = "test",
                            SportId = 6,
                            Surname = "Gardner"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 4,
                            DateOfBirth = new DateTime(1996, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mykhailo",
                            PhotoPath = "test",
                            SportId = 2,
                            Surname = "Romanchuk"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1993, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kristina",
                            PhotoPath = "test",
                            SportId = 3,
                            Surname = "Vilhauer"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 3,
                            DateOfBirth = new DateTime(1993, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Naoya",
                            PhotoPath = "test",
                            SportId = 5,
                            Surname = "Inoue"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 4,
                            DateOfBirth = new DateTime(1989, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Igor",
                            PhotoPath = "test",
                            SportId = 7,
                            Surname = "Tymoshenko"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 2,
                            DateOfBirth = new DateTime(1969, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paul",
                            PhotoPath = "test",
                            SportId = 1,
                            Surname = "Tergat"
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Name = "Kyiv"
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ukraine"
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Medal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedalTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedalTypeId");

                    b.ToTable("Medals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedalTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            MedalTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            MedalTypeId = 3
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.MedalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MedalTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bronze"
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Olympiad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("OlympiadTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("OlympiadTypeId");

                    b.ToTable("Olympiads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CountryId = 1,
                            Name = "Los Angeles 2028",
                            OlympiadTypeId = 1,
                            Year = 2028
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            CountryId = 2,
                            Name = "Berlin 1936",
                            OlympiadTypeId = 1,
                            Year = 1936
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            CountryId = 3,
                            Name = "Tokyo 2020",
                            OlympiadTypeId = 1,
                            Year = 2020
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            CountryId = 4,
                            Name = "Kyiv 2032",
                            OlympiadTypeId = 2,
                            Year = 2032
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.OlympiadType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OlympiadTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Summer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Winter"
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AthleteId")
                        .HasColumnType("int");

                    b.Property<int?>("MedalId")
                        .HasColumnType("int");

                    b.Property<int>("OlympiadId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AthleteId");

                    b.HasIndex("MedalId");

                    b.HasIndex("OlympiadId");

                    b.HasIndex("SportId");

                    b.ToTable("Results");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AthleteId = 1,
                            MedalId = 1,
                            OlympiadId = 1,
                            SportId = 1
                        },
                        new
                        {
                            Id = 2,
                            AthleteId = 2,
                            MedalId = 1,
                            OlympiadId = 2,
                            SportId = 2
                        },
                        new
                        {
                            Id = 3,
                            AthleteId = 3,
                            MedalId = 2,
                            OlympiadId = 1,
                            SportId = 1
                        },
                        new
                        {
                            Id = 4,
                            AthleteId = 4,
                            MedalId = 1,
                            OlympiadId = 3,
                            SportId = 4
                        },
                        new
                        {
                            Id = 5,
                            AthleteId = 5,
                            MedalId = 1,
                            OlympiadId = 4,
                            SportId = 5
                        },
                        new
                        {
                            Id = 6,
                            AthleteId = 6,
                            MedalId = 1,
                            OlympiadId = 3,
                            SportId = 2
                        },
                        new
                        {
                            Id = 7,
                            AthleteId = 7,
                            MedalId = 2,
                            OlympiadId = 2,
                            SportId = 3
                        },
                        new
                        {
                            Id = 8,
                            AthleteId = 8,
                            MedalId = 3,
                            OlympiadId = 4,
                            SportId = 2
                        },
                        new
                        {
                            Id = 9,
                            AthleteId = 9,
                            MedalId = 1,
                            OlympiadId = 1,
                            SportId = 6
                        },
                        new
                        {
                            Id = 10,
                            AthleteId = 10,
                            MedalId = 1,
                            OlympiadId = 2,
                            SportId = 7
                        },
                        new
                        {
                            Id = 11,
                            AthleteId = 11,
                            MedalId = 3,
                            OlympiadId = 3,
                            SportId = 1
                        },
                        new
                        {
                            Id = 12,
                            AthleteId = 12,
                            MedalId = 2,
                            OlympiadId = 4,
                            SportId = 2
                        },
                        new
                        {
                            Id = 13,
                            AthleteId = 13,
                            MedalId = 2,
                            OlympiadId = 1,
                            SportId = 1
                        },
                        new
                        {
                            Id = 14,
                            AthleteId = 14,
                            MedalId = 1,
                            OlympiadId = 2,
                            SportId = 4
                        },
                        new
                        {
                            Id = 15,
                            AthleteId = 15,
                            MedalId = 3,
                            OlympiadId = 3,
                            SportId = 6
                        },
                        new
                        {
                            Id = 16,
                            AthleteId = 16,
                            MedalId = 1,
                            OlympiadId = 4,
                            SportId = 2
                        },
                        new
                        {
                            Id = 17,
                            AthleteId = 17,
                            MedalId = 2,
                            OlympiadId = 1,
                            SportId = 3
                        },
                        new
                        {
                            Id = 18,
                            AthleteId = 18,
                            MedalId = 1,
                            OlympiadId = 2,
                            SportId = 5
                        },
                        new
                        {
                            Id = 19,
                            AthleteId = 19,
                            MedalId = 3,
                            OlympiadId = 3,
                            SportId = 7
                        },
                        new
                        {
                            Id = 20,
                            AthleteId = 20,
                            MedalId = 2,
                            OlympiadId = 4,
                            SportId = 1
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SportTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportTypeId");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "100m Sprint",
                            SportTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Freestyle Swimming",
                            SportTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cycling BMX Racing",
                            SportTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Artistic Gymnastics",
                            SportTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Boxing Lightweight",
                            SportTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Greco-Roman Wrestling",
                            SportTypeId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Rowing Single Sculls",
                            SportTypeId = 7
                        });
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.SportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SportTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Athletics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cycling"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gymnastics"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Boxing"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Wrestling"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Rowing"
                        });
                });

            modelBuilder.Entity("OlympiadSportType", b =>
                {
                    b.Property<int>("OlympiadsId")
                        .HasColumnType("int");

                    b.Property<int>("SportTypesId")
                        .HasColumnType("int");

                    b.HasKey("OlympiadsId", "SportTypesId");

                    b.HasIndex("SportTypesId");

                    b.ToTable("OlympiadSportType");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Athlete", b =>
                {
                    b.HasOne("FinalWorkDataLibrary.Entities.Country", "Country")
                        .WithMany("Athletes")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinalWorkDataLibrary.Entities.Sport", "Sport")
                        .WithMany("Athletes")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.City", b =>
                {
                    b.HasOne("FinalWorkDataLibrary.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Medal", b =>
                {
                    b.HasOne("FinalWorkDataLibrary.Entities.MedalType", "MedalType")
                        .WithMany("Medals")
                        .HasForeignKey("MedalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedalType");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Olympiad", b =>
                {
                    b.HasOne("FinalWorkDataLibrary.Entities.City", "City")
                        .WithMany("Olympiads")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinalWorkDataLibrary.Entities.Country", "Country")
                        .WithMany("Olympiads")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinalWorkDataLibrary.Entities.OlympiadType", "OlympiadType")
                        .WithMany("Olympiads")
                        .HasForeignKey("OlympiadTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("OlympiadType");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Result", b =>
                {
                    b.HasOne("FinalWorkDataLibrary.Entities.Athlete", "Athlete")
                        .WithMany("Results")
                        .HasForeignKey("AthleteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinalWorkDataLibrary.Entities.Medal", "Medal")
                        .WithMany("Results")
                        .HasForeignKey("MedalId");

                    b.HasOne("FinalWorkDataLibrary.Entities.Olympiad", "Olympiad")
                        .WithMany("Results")
                        .HasForeignKey("OlympiadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalWorkDataLibrary.Entities.Sport", "Sport")
                        .WithMany("Results")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Athlete");

                    b.Navigation("Medal");

                    b.Navigation("Olympiad");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Sport", b =>
                {
                    b.HasOne("FinalWorkDataLibrary.Entities.SportType", "SportType")
                        .WithMany("Sports")
                        .HasForeignKey("SportTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SportType");
                });

            modelBuilder.Entity("OlympiadSportType", b =>
                {
                    b.HasOne("FinalWorkDataLibrary.Entities.Olympiad", null)
                        .WithMany()
                        .HasForeignKey("OlympiadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalWorkDataLibrary.Entities.SportType", null)
                        .WithMany()
                        .HasForeignKey("SportTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Athlete", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.City", b =>
                {
                    b.Navigation("Olympiads");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Country", b =>
                {
                    b.Navigation("Athletes");

                    b.Navigation("Cities");

                    b.Navigation("Olympiads");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Medal", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.MedalType", b =>
                {
                    b.Navigation("Medals");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Olympiad", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.OlympiadType", b =>
                {
                    b.Navigation("Olympiads");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.Sport", b =>
                {
                    b.Navigation("Athletes");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("FinalWorkDataLibrary.Entities.SportType", b =>
                {
                    b.Navigation("Sports");
                });
#pragma warning restore 612, 618
        }
    }
}
