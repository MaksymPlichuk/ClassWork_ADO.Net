// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _06_EFMigrations;

#nullable disable

namespace _06_EFMigrations.Migrations
{
    [DbContext(typeof(MusicCollectionDBContext))]
    partial class MusicCollectionDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlayListSong", b =>
                {
                    b.Property<int>("PlayListsId")
                        .HasColumnType("int");

                    b.Property<int>("SongsId")
                        .HasColumnType("int");

                    b.HasKey("PlayListsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("PlayListSong");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Rating")
                        .HasMaxLength(150)
                        .HasColumnType("float");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            GenreId = 1,
                            Name = "Abbey Road",
                            Rating = 6.2000000000000002,
                            Year = new DateTime(1969, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "The Marshall Mathers LP",
                            Rating = 8.9000000000000004,
                            Year = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            GenreId = 2,
                            Name = "1989",
                            Rating = 7.7999999999999998,
                            Year = new DateTime(2014, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            GenreId = 3,
                            Name = "Kind of Blue",
                            Rating = 10.0,
                            Year = new DateTime(1959, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            GenreId = 5,
                            Name = "Requiem",
                            Rating = 9.8000000000000007,
                            Year = new DateTime(1791, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 6,
                            GenreId = 6,
                            Name = "Discovery",
                            Rating = 10.0,
                            Year = new DateTime(2001, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 7,
                            GenreId = 7,
                            Name = "Legend",
                            Rating = 9.4000000000000004,
                            Year = new DateTime(1984, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 8,
                            GenreId = 8,
                            Name = "Master of Puppets",
                            Rating = 9.6999999999999993,
                            Year = new DateTime(1986, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ArtistId = 9,
                            GenreId = 9,
                            Name = "Live at the Regal",
                            Rating = 9.0999999999999996,
                            Year = new DateTime(1965, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            ArtistId = 10,
                            GenreId = 2,
                            Name = "Divide",
                            Rating = 8.3000000000000007,
                            Year = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "The Eminem Show",
                            Rating = 9.0,
                            Year = new DateTime(2002, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "Encore",
                            Rating = 7.5,
                            Year = new DateTime(2004, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "Relapse",
                            Rating = 7.2000000000000002,
                            Year = new DateTime(2009, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            ArtistId = 1,
                            GenreId = 1,
                            Name = "Sgt. Pepper's Lonely Hearts Club Band",
                            Rating = 9.9000000000000004,
                            Year = new DateTime(1967, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            ArtistId = 1,
                            GenreId = 1,
                            Name = "Revolver",
                            Rating = 9.5,
                            Year = new DateTime(1966, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            ArtistId = 3,
                            GenreId = 2,
                            Name = "Fearless",
                            Rating = 8.6999999999999993,
                            Year = new DateTime(2008, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 2,
                            Name = "The Beatles",
                            Surname = ""
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Eminem",
                            Surname = "Mathers"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Taylor",
                            Surname = "Swift"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Miles",
                            Surname = "Davis"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 9,
                            Name = "Wolfgnag",
                            Surname = "Mozart"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 5,
                            Name = "Daft",
                            Surname = "Punk"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 8,
                            Name = "Bob",
                            Surname = "Marley"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Name = "Metallica",
                            Surname = ""
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Name = "B.B. King",
                            Surname = ""
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            Name = "Ed",
                            Surname = "Sheeran"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Workout"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chill"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Party"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Focus"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "UK"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 5,
                            Name = "France"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Australia"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hip-Hop"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Reggae"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Blues"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Folk"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+PlayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("PlayLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Morning Energy"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Evening Relax"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Name = "Friday Night"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "Study Beats"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumberOfListenings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("SongText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Length = 259,
                            Name = "Come Together",
                            NumberOfListenings = "879 702 634",
                            Rating = 8.9000000000000004,
                            SongText = "Here come old flat top.\r\nHe come grooving up slowly.\r\nHe got joo joo eyeball.\r\nHe one holy roller.\r\nHe got hair down to his knee.\r\nGot to be a joker he just do what you please.\r\n\r\nHe wear no shoe shine.\r\nHe got toe jam football.\r\nHe got monkey finger.\r\nHe shoot Coca-Cola.\r\nHe say I know you, you know me.\r\nOne thing I can tell you is you got to be free.\r\nCome together right now over me.\r\n\r\nHe bag production.\r\nHe got walrus gumboot.\r\nHe got Ono sideboard.\r\nHe one spinal cracker.\r\nHe got feet down below his knee.\r\nHold you in his armchair you can feel his disease.\r\nCome together right now over me.\r\n\r\nHe roller coaster.\r\nHe got early warning.\r\nHe got Muddy Water.\r\nHe one Mojo filter.\r\nHe say. \"One and one and one is three.\"\r\nGot to be good looking 'cause he so hard to see.\r\nCome together right now over me.\r\nCome together."
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 2,
                            Length = 326,
                            Name = "Lose Yourself",
                            NumberOfListenings = "1 523 409 871",
                            Rating = 10.0,
                            SongText = "\r\n[Intro]\r\nLook, if you had one shot or one opportunity\r\nTo seize everything you ever wanted in one moment\r\nWould you capture it or just let it slip?\r\nYo\r\n\r\n[Verse 1]\r\nHis palms are sweaty, knees weak, arms are heavy\r\nThere's vomit on his sweater already, mom's spaghetti\r\nHe's nervous, but on the surface, he looks calm and ready\r\nTo drop bombs, but he keeps on forgetting\r\nWhat he wrote down, the whole crowd goes so loud\r\nHe opens his mouth, but the words won't come out\r\nHe's chokin', how? Everybody's jokin' now\r\nThe clock's run out, time's up, over, blaow\r\nSnap back to reality, ope, there goes gravity\r\nOpe, there goes Rabbit, he choked, he's so mad\r\nBut he won't give up that easy, no, he won't have it\r\nHe knows his whole back's to these ropes, it don't matter\r\nHe's dope, he knows that, but he's broke, he's so stagnant\r\nHe knows when he goes back to this mobile home, that's when it's\r\nBack to the lab again, yo, this old rhapsody\r\nBetter go capture this moment and hope it don't pass him\r\n\r\n[Chorus]\r\nYou better lose yourself in the music\r\nThe moment, you own it, you better never let it go (Go)\r\nYou only get one shot, do not miss your chance to blow\r\nThis opportunity comes once in a lifetime, yo\r\nYou better lose yourself in the music\r\nThe moment, you own it, you better never let it go (Go)\r\nYou only get one shot, do not miss your chance to blow\r\nThis opportunity comes once in a lifetime, yo\r\nYou better\r\n\r\n[Verse 2]\r\nHis soul's escaping through this hole that is gaping\r\nThis world is mine for the taking, make me king\r\nAs we move toward a new world order\r\nA normal life is boring, but superstardom's\r\nClose to post-mortem, it only grows harder\r\nHomie grows hotter, he blows, it's all over\r\nThese hoes is all on him, coast-to-coast shows\r\nHe's known as the Globetrotter, lonely roads\r\nGod only knows he's grown farther from home, he's no father\r\nHe goes home and barely knows his own daughter\r\nBut hold your nose 'cause here goes the cold water\r\nThese hoes don't want him no mo', he's cold product\r\nThey moved on to the next schmoe who flows\r\nHe nose-dove and sold nada, and so the soap opera\r\nIs told, it unfolds, I suppose it's old, partner\r\nBut the beat goes on, da-da-dom, da-dom, dah-dah-dah-dah\r\n\r\n[Chorus]\r\nYou better lose yourself in the music\r\nThe moment, you own it, you better never let it go (Go)\r\nYou only get one shot, do not miss your chance to blow\r\nThis opportunity comes once in a lifetime, yo\r\nYou better lose yourself in the music\r\nThe moment, you own it, you better never let it go (Go)\r\nYou only get one shot, do not miss your chance to blow\r\nThis opportunity comes once in a lifetime, yo\r\nYou better\r\n\r\n[Verse 3]\r\nNo more games, I'ma change what you call rage\r\nTear this motherfuckin' roof off like two dogs caged\r\nI was playin' in the beginning, the mood all changed\r\nI've been chewed up and spit out and booed off stage\r\nBut I kept rhymin' and stepped right in the next cypher\r\nBest believe somebody's payin' the Pied Piper\r\nAll the pain inside amplified by the\r\nFact that I can't get by with my nine-to-\r\nFive and I can't provide the right type of life for my family\r\n'Cause, man, these goddamn food stamps don't buy diapers\r\nAnd there's no movie, there's no Mekhi Phifer, this is my life\r\nAnd these times are so hard, and it's gettin' even harder\r\nTryna feed and water my seed, plus teeter-totter\r\nCaught up between bein' a father and a prima donna\r\nBaby-mama drama, screamin' on her, too much for me to wanna\r\nStay in one spot, another day of monotony's gotten me\r\nTo the point I'm like a snail, I've got\r\nTo formulate a plot or end up in jail or shot\r\nSuccess is my only motherfuckin' option, failure's not\r\nMom, I love you, but this trailer's got\r\nTo go, I cannot grow old in Salem's Lot\r\nSo here I go, it's my shot, feet, fail me not\r\nThis may be the only opportunity that I got\r\n\r\n[Chorus]\r\nYou better lose yourself in the music\r\nThe moment, you own it, you better never let it go (Go)\r\nYou only get one shot, do not miss your chance to blow\r\nThis opportunity comes once in a lifetime, yo\r\nYou better lose yourself in the music\r\nThe moment, you own it, you better never let it go (Go)\r\nYou only get one shot, do not miss your chance to blow\r\nThis opportunity comes once in a lifetime, yo\r\nYou better\r\n\r\n[Outro]\r\nYou can do anything you set your mind to, man"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 3,
                            Length = 231,
                            Name = "Blank Space",
                            NumberOfListenings = "985 430 212",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 4,
                            Length = 545,
                            Name = "So What",
                            NumberOfListenings = "213 459 876",
                            Rating = 3.6000000000000001
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 5,
                            Length = 720,
                            Name = "Lacrimosa",
                            NumberOfListenings = "54 321 876",
                            Rating = 7.0999999999999996
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 6,
                            Length = 224,
                            Name = "Harder Better Faster Stronger",
                            NumberOfListenings = "632 540 921",
                            Rating = 4.4000000000000004
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 7,
                            Length = 270,
                            Name = "No Woman No Cry",
                            NumberOfListenings = "784 320 654",
                            Rating = 6.7999999999999998
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 8,
                            Length = 515,
                            Name = "Master of Puppets",
                            NumberOfListenings = "456 213 987",
                            Rating = 9.1999999999999993
                        },
                        new
                        {
                            Id = 9,
                            AlbumId = 9,
                            Length = 220,
                            Name = "Sweet Little Angel",
                            NumberOfListenings = "19 876 543",
                            Rating = 2.5
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 10,
                            Length = 240,
                            Name = "Shape of You",
                            NumberOfListenings = "3 645 098 123",
                            Rating = 7.2999999999999998,
                            SongText = "[Verse 1]\r\nA club isn't the best place to find a lover\r\nSo the bar is where I go (Mm)\r\nMe and my friends at the table doin' shots\r\nDrinkin' fast and then we talk slow (Mm)\r\nAnd you come over and start up a conversation with just me\r\nAnd trust me, I'll give it a chance now (Mm)\r\nTake my hand, stop, put Van the Man on the jukebox\r\nAnd then we start to dance, and now I'm singin' like\r\n\r\n[Pre-Chorus]\r\nGirl, you know I want your love\r\nYour love was handmade for somebody like me\r\nWell, come on now, follow my lead\r\nI may be crazy, don't mind me\r\nSay, \"Boy, let's not talk too much\"\r\nGrab on my waist and put that body on me\r\nWell, come on now, follow my lead\r\nCome, come on now, follow my lead, mm\r\n\r\n[Chorus]\r\nI'm in love with the shape of you\r\nWe push and pull like a magnet do\r\nAlthough my heart is fallin' too\r\nI'm in love with your body\r\nAnd last night, you were in my room\r\nAnd now my bed sheets smell like you\r\nEvery day, discoverin' somethin' brand new\r\nWell, I'm in love with your body\r\nSee Ed Sheeran Live\r\nGet tickets as low as $72\r\n[Post-Chorus]\r\nOh, I, oh, I, oh, I, oh, I\r\nWell, I'm in love with your body\r\nOh, I, oh, I, oh, I, oh, I\r\nWell, I'm in love with your body\r\nOh, I, oh, I, oh, I, oh, I\r\nWell, I'm in love with your body\r\nEvery day, discoverin' somethin' brand new\r\nI'm in love with the shape of you\r\n\r\n[Verse 2]\r\nOne week in, we let the story begin\r\nWe're goin' out on our first date (Mm)\r\nYou and me are thrifty, so go all-you-can-eat\r\nFill up your bag and I fill up a plate (Mm)\r\nWe talk for hours and hours about the sweet and the sour\r\nAnd how your family is doin' okay (Mm)\r\nAnd leave and get in a taxi, and kiss in the back seat\r\nTell the driver make the radio play and I'm singin' like\r\n\r\n[Pre-Chorus]\r\nGirl, you know I want your love\r\nYour love was handmade for somebody like me\r\nWell, come on now, follow my lead\r\nI may be crazy, don't mind me\r\nSay, \"Boy, let's not talk too much\"\r\nGrab on my waist and put that body on me\r\nWell, come on now, follow my lead\r\nCome, come on now, follow my lead, mm\r\n[Chorus]\r\nI'm in love with the shape of you\r\nWe push and pull like a magnet do\r\nAlthough my heart is fallin' too\r\nI'm in love with your body\r\nAnd last night, you were in my room\r\nAnd now my bed sheets smell like you\r\nEvery day, discoverin' somethin' brand new\r\nWell, I'm in love with your body\r\n\r\n[Post-Chorus]\r\nOh, I, oh, I, oh, I, oh, I\r\nWell, I'm in love with your body\r\nOh, I, oh, I, oh, I, oh, I\r\nWell, I'm in love with your body\r\nOh, I, oh, I, oh, I, oh, I\r\nWell, I'm in love with your body\r\nEvery day, discoverin' somethin' brand new\r\nI'm in love with the shape of you\r\n\r\n[Bridge]\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\n[Chorus]\r\nI'm in love with the shape of you\r\nWe push and pull like a magnet do\r\nAlthough my heart is fallin' too\r\nI'm in love with your body\r\nAnd last night, you were in my room\r\nAnd now my bed sheets smell like you\r\nEvery day, discoverin' somethin' brand new\r\nWell, I'm in love with your body\r\n\r\n[Outro]\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nI'm in love with your body\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nI'm in love with your body\r\nCome on, be my baby, come on\r\nCome on, be my baby, come on\r\nI'm in love with your body\r\nEvery day, discoverin' somethin' brand new\r\nI'm in love with the shape of you"
                        });
                });

            modelBuilder.Entity("PlayListSong", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+PlayList", null)
                        .WithMany()
                        .HasForeignKey("PlayListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Album", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Artist", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Country", "Country")
                        .WithMany("Artists")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+PlayList", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Category", "Category")
                        .WithMany("PlayLists")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Song", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Category", b =>
                {
                    b.Navigation("PlayLists");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Country", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Genre", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
