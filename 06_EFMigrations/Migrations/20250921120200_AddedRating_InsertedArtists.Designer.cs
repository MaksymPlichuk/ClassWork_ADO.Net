// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _06_EFMigrations;

#nullable disable

namespace _06_EFMigrations.Migrations
{
    [DbContext(typeof(MusicCollectionDBContext))]
    [Migration("20250921120200_AddedRating_InsertedArtists")]
    partial class AddedRating_InsertedArtists
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlayListSong", b =>
                {
                    b.Property<int>("PlayListsId")
                        .HasColumnType("int");

                    b.Property<int>("SongsId")
                        .HasColumnType("int");

                    b.HasKey("PlayListsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("PlayListSong");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            GenreId = 1,
                            Name = "Abbey Road",
                            Rating = 6.2000000000000002,
                            Year = new DateTime(1969, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "The Marshall Mathers LP",
                            Rating = 8.9000000000000004,
                            Year = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            GenreId = 2,
                            Name = "1989",
                            Rating = 7.7999999999999998,
                            Year = new DateTime(2014, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            GenreId = 3,
                            Name = "Kind of Blue",
                            Rating = 10.0,
                            Year = new DateTime(1959, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            GenreId = 5,
                            Name = "Requiem",
                            Rating = 9.8000000000000007,
                            Year = new DateTime(1791, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 6,
                            GenreId = 6,
                            Name = "Discovery",
                            Rating = 10.0,
                            Year = new DateTime(2001, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 7,
                            GenreId = 7,
                            Name = "Legend",
                            Rating = 9.4000000000000004,
                            Year = new DateTime(1984, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 8,
                            GenreId = 8,
                            Name = "Master of Puppets",
                            Rating = 9.6999999999999993,
                            Year = new DateTime(1986, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ArtistId = 9,
                            GenreId = 9,
                            Name = "Live at the Regal",
                            Rating = 9.0999999999999996,
                            Year = new DateTime(1965, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            ArtistId = 10,
                            GenreId = 2,
                            Name = "Divide",
                            Rating = 8.3000000000000007,
                            Year = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "The Eminem Show",
                            Rating = 9.0,
                            Year = new DateTime(2002, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "Encore",
                            Rating = 7.5,
                            Year = new DateTime(2004, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            ArtistId = 2,
                            GenreId = 4,
                            Name = "Relapse",
                            Rating = 7.2000000000000002,
                            Year = new DateTime(2009, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            ArtistId = 1,
                            GenreId = 1,
                            Name = "Sgt. Pepper's Lonely Hearts Club Band",
                            Rating = 9.9000000000000004,
                            Year = new DateTime(1967, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            ArtistId = 1,
                            GenreId = 1,
                            Name = "Revolver",
                            Rating = 9.5,
                            Year = new DateTime(1966, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            ArtistId = 3,
                            GenreId = 2,
                            Name = "Fearless",
                            Rating = 8.6999999999999993,
                            Year = new DateTime(2008, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 2,
                            Name = "The Beatles",
                            Surname = ""
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Eminem",
                            Surname = "Mathers"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Taylor",
                            Surname = "Swift"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Miles",
                            Surname = "Davis"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 9,
                            Name = "Wolfgnag",
                            Surname = "Mozart"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 5,
                            Name = "Daft",
                            Surname = "Punk"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 8,
                            Name = "Bob",
                            Surname = "Marley"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Name = "Metallica",
                            Surname = ""
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Name = "B.B. King",
                            Surname = ""
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            Name = "Ed",
                            Surname = "Sheeran"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Workout"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chill"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Party"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Focus"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "UK"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 5,
                            Name = "France"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Australia"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hip-Hop"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Reggae"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Blues"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Folk"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+PlayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("PlayLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Morning Energy"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Evening Relax"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Name = "Friday Night"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "Study Beats"
                        });
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Length = 259,
                            Name = "Come Together",
                            Rating = 8.9000000000000004
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 2,
                            Length = 326,
                            Name = "Lose Yourself",
                            Rating = 10.0
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 3,
                            Length = 231,
                            Name = "Blank Space",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 4,
                            Length = 545,
                            Name = "So What",
                            Rating = 3.6000000000000001
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 5,
                            Length = 720,
                            Name = "Lacrimosa",
                            Rating = 7.0999999999999996
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 6,
                            Length = 224,
                            Name = "Harder Better Faster Stronger",
                            Rating = 4.4000000000000004
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 7,
                            Length = 270,
                            Name = "No Woman No Cry",
                            Rating = 6.7999999999999998
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 8,
                            Length = 515,
                            Name = "Master of Puppets",
                            Rating = 9.1999999999999993
                        },
                        new
                        {
                            Id = 9,
                            AlbumId = 9,
                            Length = 220,
                            Name = "Sweet Little Angel",
                            Rating = 2.5
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 10,
                            Length = 240,
                            Name = "Shape of You",
                            Rating = 7.2999999999999998
                        });
                });

            modelBuilder.Entity("PlayListSong", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+PlayList", null)
                        .WithMany()
                        .HasForeignKey("PlayListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Album", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Artist", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Country", "Country")
                        .WithMany("Artists")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+PlayList", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Category", "Category")
                        .WithMany("PlayLists")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Song", b =>
                {
                    b.HasOne("_06_EFMigrations.MusicCollectionDBContext+Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Category", b =>
                {
                    b.Navigation("PlayLists");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Country", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("_06_EFMigrations.MusicCollectionDBContext+Genre", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
