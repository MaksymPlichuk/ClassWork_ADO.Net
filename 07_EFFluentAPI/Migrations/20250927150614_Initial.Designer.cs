// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _07_EFFluentAPI;

#nullable disable

namespace _07_EFFluentAPI.Migrations
{
    [DbContext(typeof(ShopDBContext))]
    [Migration("20250927150614_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clothes"
                        });
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Kyiv"
                        });
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ukraine"
                        });
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Security"
                        });
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Discount = 0.1f,
                            IsInStock = true,
                            Name = "Laptop",
                            Price = 1200m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Discount = 0f,
                            IsInStock = true,
                            Name = "Apple",
                            Price = 1.2m,
                            Quantity = 500
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Discount = 0.2f,
                            IsInStock = true,
                            Name = "T-Shirt",
                            Price = 25m,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("ParkingArea")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "5th Avenue 123",
                            CityId = 1,
                            Name = "BestBuy",
                            ParkingArea = 200f
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Alexanderplatz 45",
                            CityId = 2,
                            Name = "Edeka",
                            ParkingArea = 150f
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Khreshchatyk 12",
                            CityId = 3,
                            Name = "Silpo",
                            ParkingArea = 80f
                        });
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "umbrella@shop.com",
                            Name = "Albert",
                            PhoneNumber = "+123456987456",
                            PositionId = 1,
                            Salary = 1200m,
                            ShopId = 1,
                            Surname = "Wesker"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Heisenberg@shop.com",
                            Name = "Werner",
                            PhoneNumber = "+18888698745",
                            PositionId = 2,
                            Salary = 2000m,
                            ShopId = 2,
                            Surname = "Heisenberg"
                        },
                        new
                        {
                            Id = 3,
                            Email = "oleh.v@shop.com",
                            Name = "Oleh",
                            PhoneNumber = "+3809874556698",
                            PositionId = 3,
                            Salary = 900m,
                            ShopId = 3,
                            Surname = "Vinnuk"
                        });
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("_07_EFFluentAPI.Entitties.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_07_EFFluentAPI.Entitties.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.City", b =>
                {
                    b.HasOne("_07_EFFluentAPI.Entitties.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Product", b =>
                {
                    b.HasOne("_07_EFFluentAPI.Entitties.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Shop", b =>
                {
                    b.HasOne("_07_EFFluentAPI.Entitties.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Worker", b =>
                {
                    b.HasOne("_07_EFFluentAPI.Entitties.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_07_EFFluentAPI.Entitties.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("_07_EFFluentAPI.Entitties.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
